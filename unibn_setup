#!/bin/bash

###############################################################################
#                                   License                                   #
###############################################################################
#
# Copyright (c) 2011 Martin Ueding <dev@martin-ueding.de>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of Martin Ueding nor the names of its contributors may be
#   used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL MARTIN UEDING BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


###############################################################################
#                                 Description                                 #
###############################################################################
#
# Several packages needed in the "EDV für Physiker" class at Bonn University
# are installed with this script. The ROOT statistics package does not have a
# Debian package and is installed manually instead.
#
# To ease the use of the "bonnet" wireless network, a script for the
# NetworkManager dispatcher deamon is installed which automatically connects
# the user to the VPN of the university. For that, the university user account
# is needed and polled in the script.
#
# This script is intended to run on Ubuntu, but it should work on every Debian
# derivative where the user can run commands with `sudo`. Ubuntu has this as a
# default, Debian uses a separate root account instead of sudo by default.
#
# In order to run, this script needs:
# * apt-get
# * md5sum
# * sudo
# * wget


###############################################################################
#                               Global Settings                               #
###############################################################################

set -e
set -u

version=1.1


###############################################################################
#                         Handle --version and --help.                        #
###############################################################################

case "${1:-}" in
	--version)
		echo "$version"
		exit 0
		;;

	--help)
		echo "This script installs software needed for the EDV (computer science) class."
		exit 0
		;;
esac


###############################################################################
#                   Print welcome message and instructions.                   #
###############################################################################

echo '+-----------------------------------------------------------------------------+'
echo '|              Installation von Software für die EDV Vorlesung                |'
echo '|                       (emacs, LaTeX, ROOT, gnuplot)                         |'
echo '|                                                                             |'
echo '|               Einrichtung des VPN für das Netzwerk "bonnet"                 |'
echo '+-----------------------------------------------------------------------------+'
echo
echo 'I: Falls Sie die Installation aus irgendeinem Grund abbrechen möchten, drücken'
echo 'I: Sie Strg-C.'
echo
echo 'I: Um die Aktionen dieses Skripts rückgängig zu machen, führen Sie folgende'
echo 'I: Befehle aus:'
echo
echo 'I: Entfernen der per apt installierten Software:'
echo 'I:     sudo apt-get -y remove emacs texlive-latex base gnuplot'
echo 'I:     sudo apt-get -y autoremove'
echo
echo 'I: Entfernen des VPN Zugangs:'
echo 'I:     sudo rm -f /etc/unibn-wlan.conf'
echo 'I:     sudo rm -f /etc/NetworkManager/dispatcher.d/99bonnet'
echo 'I:     sudo apt-get -y remove vpnc'
echo
echo 'I: Entfernen von ROOT:'
echo 'I:     sudo rm -rf /opt/root'
echo


###############################################################################
#                         Ask for installation scope.                         #
###############################################################################


read -r -p '-> VPN Zugang einrichten? [Y/n] ' answer

if [[ "$answer" = [yYjJ] || -z "$answer" ]]
then
	install_vpn=true
	echo 'I: VPN wird eingerichtet.'
else
	install_vpn=false
	echo 'I: VPN *nicht* wird eingerichtet.'
fi


read -r -p '-> ROOT Statistik installieren? [Y/n] ' answer

if [[ "$answer" = [yYjJ] || -z "$answer" ]]
then
	install_root=true
	echo 'I: ROOT wird installiert.'
else
	install_root=false
	echo 'I: ROOT *nicht* wird installiert.'
fi


###############################################################################
#                    Ask for Bonn university user account.                    #
###############################################################################

if [[ "$install_vpn" == "true" ]]
then
	echo 'I: Bitte geben Sie Ihre Uni Bonn Zugangsdaten ein:'
	echo 'I: Warnung: Ihr Passwort wird im Klartext angezeigt und später bei der'
	echo 'I: Erstellung der Konfigurationsdatei noch einmal angezeigt. Benutzen Sie'
	echo 'I: Skript daher bitte nicht, wenn andere Ihr Passwort sehen könnten.'

	user=
	password=

	# Poll the user for a user name until he enters one.
	while [[ -z "$user" ]]
	do
		read -r -p '-> Uni Bonn (HRZ) Benutzername: ' user

		if [[ -z "$user" ]]
		then
			echo 'E: Es wurde kein Benutzername eingegeben.'
		fi
	done

	# Poll the user for a password until he enters one.
	while [[ -z "$password" ]]
	do
		read -r -p '-> Uni Bonn (HRZ) Passwort: ' password

		if [[ -z "$password" ]]
		then
			echo 'E: Es wurde kein Passwort eingegeben.'
		fi
	done

	echo
fi


###############################################################################
#                        Install packages via apt-get.                        #
###############################################################################

echo 'I: Dieses Skript wird gleich nach dem [sudo] Passwort fragen.'
echo 'I: Dies ist das Passwort für Ihren Benutzeraccount auf diesem Rechner.'
echo
echo 'I: Installiere vpn client, emacs, LaTeX, gnuplot …'

packages=( emacs texlive-latex-base gnuplot )

if [[ "$install_vpn" == "true" ]]
then
	packages=( vpnc ${packages[@]} )
fi

sudo apt-get -y install ${packages[@]}


###############################################################################
#                          Create VPN login script.                           #
###############################################################################

if [[ "$install_vpn" == "true" ]]
then
	echo 'I: Erstelle Skript für automatische Einwahl ins VPN wenn im WLAN bonnet …'

	cat << EOF | sudo tee /etc/NetworkManager/dispatcher.d/99bonnet
#!/bin/bash
# Copyright (c) 2011 Martin Ueding <dev@martin-ueding.de>

set -e
set -u

if [[ "\$1" != "wlan0" ]]
then
	return
fi

# Kill vpnc if it is still active
if pgrep vpnc
then
	vpnc-disconnect
fi

# Exit if we are not connected to bonnet
if ! iwconfig wlan0 | grep bonnet
then
	return 0
fi

# Handle the action
if [[ "\$2" == up ]]
then
	vpnc /etc/unibn-wlan.conf
else
	vpnc-disconnect
fi
EOF

	sudo chmod 755 /etc/NetworkManager/dispatcher.d/99bonnet
	sudo chown root:root /etc/NetworkManager/dispatcher.d/99bonnet


###############################################################################
#                        Create config file for vpnc.                         #
###############################################################################

	echo 'I: Erstelle Konfigurationsdatei für vpnc, den VPN client …'

	cat << EOF | sudo tee /etc/unibn-wlan.conf
IPSec gateway 131.220.224.201
IPSec ID unibn-wlan
IPSec secret Ne\$e!
Xauth username $user
Xauth password $password
EOF

	sudo chown root:root /etc/unibn-wlan.conf
fi


###############################################################################
#                      Install ROOT statistics package.                       #
###############################################################################

if [[ "$install_root" == "true" ]]
then

	echo 'I: Installiere ROOT …'

	root_file=root_v5.30.02.Linux-slc5-gcc4.3.tar.gz

	# Test whether there is any need to download the root package. The checksum is
	# needed to detect an aborted download.
	if [[ -f "$root_file" && $(md5sum "$root_file" | awk '{print $1}') == 53b311f490e7673e19c493ccb7216748 ]]
	then
		echo 'I: ROOT wurde bereits heruntergeladen.'
	else
		echo 'I: Lade ROOT herunter …'
		# Delete the old download so that wget does not try to preserve the broken
		# download.
		rm -f "$root_file"
		wget ftp://root.cern.ch/root/$root_file
	fi

	echo 'I: Entpacke ROOT …'
	tar -xzf "$root_file"

	echo 'I: Lösche alte ROOT installation …'
	sudo rm -rf /opt/root

	echo 'I: Verschiebe ROOT nach /opt …'
	sudo mv root /opt/

	echo 'I: Passe Rechte der ROOT Installation an …'
	sudo chown -R root:root /opt/root

	# Check whether the environment setting script of the ROOT package is already
	# included in the .bashrc of the user. This assumes that the user uses bash,
	# but someone who does this on a fresh Ubuntu installation will certainly do
	# so.
	if fgrep '/opt/root/bin/thisroot.sh' $HOME/.bashrc > /dev/null 2>&1
	then
		echo 'I: ROOT ist bereits im Environment.'
	else
		echo 'I: Füge ROOT zum Environment hinzu …'
		echo >> "$HOME/.bashrc"
		echo '# Setup ROOT environment.' >> "$HOME/.bashrc"
		echo '. /opt/root/bin/thisroot.sh' >> "$HOME/.bashrc"
		echo 'I: ROOT wird erst funktionieren, wenn Sie ein neues Terminal öffnen.'
		echo 'I: Sie können auch mit `. ~/.bashrc` die Konfiguration neu laden.'
	fi
fi


###############################################################################
#                                   Finish.                                   #
###############################################################################

echo
echo 'I: Die Installation und Konfiguration ist abgeschlossen.'
