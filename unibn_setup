#!/bin/bash

###############################################################################
#                                   License                                   #
###############################################################################
#
# Copyright (c) 2011 Martin Ueding <dev@martin-ueding.de>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#     * Neither the name of Martin Ueding nor the names of its contributors may
#       be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL MARTIN UEDING BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


###############################################################################
#                                 Description                                 #
###############################################################################
#
# This script is intended to run on Ubuntu, but it should work on every Debian
# derivative where the user can run commands with `sudo`. Ubuntu has this as a
# default, Debian uses a separate root account instead of sudo by default.
#
# Several packages needed in the "EDV für Physiker" class at Bonn University
# are installed with this script. The ROOT statistics package does not have a
# Debian package and is installed manually instead.
#
# To ease the use of the "bonnet" wireless network, a script for the
# NetworkManager dispatcher deamon is installed which automatically connects
# the user to the VPN of the university. For that, the university user account
# is needed and polled in the script.


###############################################################################
#                         Handle --version and --help.                        #
###############################################################################

if [[ "$1" == "--version" ]]
then
	echo '1.0.1'
	exit 0
fi

if [[ "$1" == "--help" ]]
then
	echo "This script installs software needed for the EDV (computer science) class."
	exit 0
fi

set -u


###############################################################################
#                   Print welcome message and instructions.                   #
###############################################################################

echo '+-----------------------------------------------------------------------------+'
echo '|              Installation von Software für die EDV Vorlesung                |'
echo '|                       (emacs, LaTeX, ROOT, gnuplot)                         |'
echo '|                                                                             |'
echo '|               Einrichtung des VPN für das Netzwerk "bonnet"                 |'
echo '+-----------------------------------------------------------------------------+'
echo
echo 'I: Um die Aktionen dieses Skripts rückgängig zu machen, führen Sie folgende'
echo 'I: Befehle aus:'
echo 'I: sudo apt-get -y remove vpnc emacs texlive-latex base gnuplot'
echo 'I: sudo apt-get -y autoremove'
echo 'I: sudo rm -f /etc/NetworkManager/dispatcher.d/99bonnet /etc/unibn-wlan.conf'
echo 'I: sudo rm -rf /opt/root'
echo


###############################################################################
#                    Ask for Bonn university user account.                    #
###############################################################################

echo 'Bitte geben Sie Ihre Uni Bonn Zugangsdaten ein:'

read -r -p 'Uni Bonn (HRZ) Benutzername: ' user
read -r -p 'Uni Bonn (HRZ) Passwort: ' password

echo


###############################################################################
#                        Install packages via apt-get.                        #
###############################################################################

echo 'I: Dieses Skript wird gleich nach dem [sudo] Passwort fragen.'
echo 'I: Dies ist das Passwort für Ihren Benutzeraccount auf diesem Rechner.'
echo
echo 'I: Installiere vpn client, emacs, LaTeX, gnuplot …'

sudo apt-get -y install vpnc emacs texlive-latex-base gnuplot


###############################################################################
#                          Create VPN login script.                           #
###############################################################################

echo 'I: Erstelle Skript für automatische Einwahl ins VPN wenn im WLAN bonnet …'

cat << EOF | sudo tee /etc/NetworkManager/dispatcher.d/99bonnet
#!/bin/bash
# Copyright (c) 2011 Martin Ueding <dev@martin-ueding.de>

set -e
set -u

if [[ "\$1" != "wlan0" ]]
then
	return
fi

# Kill vpnc if it is still active
if pgrep vpnc
then
	vpnc-disconnect
fi

# Exit if we are not connected to bonnet
if ! iwconfig wlan0 | grep bonnet
then
	return 0
fi

# Handle the action
if [[ "\$2" == up ]]
then
	vpnc /etc/unibn-wlan.conf
else
	vpnc-disconnect
fi
EOF

sudo chmod 755 /etc/NetworkManager/dispatcher.d/99bonnet
sudo chown root:root /etc/NetworkManager/dispatcher.d/99bonnet

echo 'I: Skript erstellt.'


###############################################################################
#                        Create config file for vpnc.                         #
###############################################################################

echo 'I: Erstelle Konfigurationsdatei für vpnc, den VPN client …'

cat << EOF | sudo tee /etc/unibn-wlan.conf
IPSec gateway 131.220.224.201
IPSec ID unibn-wlan
IPSec secret Ne\$e!
Xauth username $user
Xauth password $password
EOF

sudo chown root:root /etc/unibn-wlan.conf

echo 'I: Konfigurationsdatei erstellt.'


###############################################################################
#                      Install ROOT statistics package.                       #
###############################################################################

echo 'I: Installiere ROOT …'

# Test whether there is any need to download the root package.
if [[ -f root_v5.30.02.Linux-slc5-gcc4.3.tar.gz && $(md5sum root_v5.30.02.Linux-slc5-gcc4.3.tar.gz | awk '{print $1}') == 53b311f490e7673e19c493ccb7216748 ]]
then
	echo 'I: ROOT wurde bereits heruntergeladen.'
else
	echo 'I: Lade ROOT herunter …'
	wget ftp://root.cern.ch/root/root_v5.30.02.Linux-slc5-gcc4.3.tar.gz
fi

echo 'I: Entpacke ROOT …'
tar -xzf root_v5.30.02.Linux-slc5-gcc4.3.tar.gz

echo 'I: Lösche alte ROOT installation …'
sudo rm -rf /opt/root

echo 'I: Verschiebe ROOT nach /opt …'
sudo mv root /opt/

echo 'I: Passe Rechte der ROOT Installation an …'
sudo chown -R root:root /opt/root

if fgrep '/opt/root/bin/thisroot.sh' $HOME/.bashrc > /dev/null 2>&1
then
	echo 'I: ROOT ist bereits im Environment.'
else
	echo 'I: Füge ROOT zum Environment hinzu …'
	echo >> "$HOME/.bashrc"
	echo '. /opt/root/bin/thisroot.sh' >> "$HOME/.bashrc"
	echo 'I: Bitte ein neues Terminal öffnen ODER folgendes ausführen, um ROOT zu benutzen:'
	echo '. ~/.bashrc'
fi


###############################################################################
#                                   Finish.                                   #
###############################################################################

echo
echo 'Die Installation und Konfiguration ist abgeschlossen.'
